//////////////////////////////////////////////////////////////////////
// Q-ter Cat V2 (Using MiniPlan TinyPlan97) by Mason E & D (2020.2.7)
/////////////////////////////////////////////////////////////////////

// Author : Mason 2019/7/30, masonchen1003@gmail.com
// FB : https://www.facebook.com/mason.chen.1420
// Licensed under the Creative Commons - Attribution - Non-Commercial license.
// 請尊重智慧財產權，如要使用於他處或應用，請註明出處及通知原作者。

#include "Arduino.h"
#include "Wire.h"

#include <Servo.h>
#include <LRemote.h>
#include <EEPROM.h>

//////////////////////////////////////////////////////////////////////////////////////////////////////
// servo offset, please update the offset values
//                           P2, P5,P13,P10, P4, P7,P12,P11,P17,P16,P3,P15
//int offset_12x[] PROGMEM = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0};  // initial all 0
//////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////
// your servo offset values
//                           P2, P5, P13, P10, P4, P7, P12, P11, P17, P16, P3, P15
int offset_12x[] PROGMEM = {  0,  0,   0,   0,  0,  0,   0,   0,   0,   0,  0,   0};
//////////////////////////////////////////////////////////////////////////////////////////////////////


// offset value for EEPROM, debug on going 
int offset[] PROGMEM = {  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0};  // default

// define linkit remote variable
LRemoteCircleButton home_btn;
LRemoteButton fwd_btn;
LRemoteButton bwd_btn;
LRemoteButton left_btn;
LRemoteButton right_btn;
LRemoteButton demo1_btn;
LRemoteButton demo2_btn;
LRemoteButton demo3_btn;
LRemoteButton demo4_btn;
LRemoteButton act1_btn;
LRemoteButton act2_btn;
LRemoteButton act3_btn;
LRemoteButton act4_btn;
LRemoteButton act5_btn;
LRemoteButton act6_btn;
LRemoteButton act7_btn;
LRemoteButton act8_btn;
LRemoteButton act9_btn;
LRemoteButton act10_btn;
LRemoteButton act11_btn;
LRemoteButton act12_btn;
LRemoteSwitch HL_btn;

// Version
String FW_Version = "Quadruped Robot V101 (2020/01/09)";

// Battery
#define BatteryPin  14  
float BatteryVol = 0;
int BatteryCount = 0;
const float BatteryLowVol = 4.6;
const float R1 = 100;     // 10Kohm, The Voltage devider resistor R1
const float R2 = 47;      // 4.7Kohm, The Voltage devider resistor R2
const float Vmax = 6.2;   // Input voltage that would give 2.5V in voltage devider.
const int   VStep = 1024; // Each voltage step in the analog pin will indicate this voltage is given.
float VoltageDivider = 0; // VoltageDivider = (ADC/(R2/(R1+R2)))/1024

// Servos Matrix
const int ALLMATRIX = 13;        
const int ALLSERVOS = 12;        

// SG90 Servo PWM Pulse Traveling
const int PWMRES_Min = 1;       // PWM Resolution 1
const int PWMRES_Max = 180;     // PWM Resolution 180
const int SERVOMIN = 500;       // 500
const int SERVOMAX = 2400;      // 2400

// Servo update time
const int Update_time = 10;   // 10ms

// Backup Servo Value
float Running_Servo_POS [ALLSERVOS];

Servo All_Servo[ALLSERVOS]; 

int tune[] PROGMEM = { 0,0,0,0,0,0,0,0,0,0,0,0};  
int motion[] PROGMEM = { 90,90,90,90,90,90,90,90,90,90,500};

int Servo_home [][ALLMATRIX] = { 50,  90,  90,  130,  130,  90,  90,  50, 90 , 90, 90,90,500 };
int Servo_init [][ALLMATRIX] = { 90,  90,  90,  90,  90,  90,  90,  90, 90 , 90,90,90, 500 };

void Run_PROGRAM_function(int motion_data[][ALLSERVOS],  int motion_step, int step_time) {
       // Servo run to step's position
  for ( int i_loop = 0; i_loop < motion_step; i_loop++)  
    {
         for (int i = 0; i < ALLSERVOS; i++) 
          {
           All_Servo[i].writeMicroseconds((motion_data[i_loop][i] + tune[i]+offset_12x[i])  * (SERVOMAX - SERVOMIN) / PWMRES_Max+ SERVOMIN); 
           }
        delay(step_time);   
    }
}

int Move_Forward_H [][12] PROGMEM = {
{90 , 62 , 145 , 90 , 101 , 80 , 93 , 86 , 34 , 90 , 119 , 90},
{90 , 60 , 146 , 90 , 99 , 78 , 93 , 92 , 34 , 90 , 117 , 90},
{90 , 58 , 145 , 90 , 98 , 78 , 93 , 97 , 35 , 90 , 117 , 90},
{90 , 58 , 144 , 90 , 98 , 77 , 93 , 102 , 37 , 90 , 114 , 90},
{90 , 55 , 142 , 90 , 97 , 75 , 93 , 106 , 37 , 90 , 112 , 90},
{90 , 53 , 140 , 90 , 96 , 75 , 93 , 109 , 39 , 90 , 112 , 90},
{90 , 53 , 132 , 90 , 96 , 74 , 93 , 102 , 41 , 90 , 109 , 90},
{90 , 51 , 124 , 90 , 95 , 72 , 93 , 95 , 41 , 90 , 106 , 90},
{90 , 49 , 117 , 90 , 94 , 72 , 93 , 87 , 43 , 90 , 106 , 90},
{90 , 49 , 109 , 90 , 94 , 70 , 93 , 78 , 45 , 90 , 104 , 90},
{90 , 47 , 101 , 90 , 94 , 68 , 93 , 68 , 45 , 90 , 101 , 90},
{90 , 45 , 101 , 90 , 93 , 78 , 94 , 68 , 47 , 90 , 109 , 90},
{90 , 45 , 104 , 90 , 93 , 87 , 94 , 70 , 49 , 90 , 117 , 90},
{90 , 43 , 106 , 90 , 93 , 95 , 94 , 72 , 49 , 90 , 124 , 90},
{90 , 41 , 106 , 90 , 93 , 102 , 95 , 72 , 51 , 90 , 132 , 90},
{90 , 41 , 109 , 90 , 93 , 109 , 96 , 74 , 53 , 90 , 140 , 90},
{90 , 39 , 112 , 90 , 93 , 106 , 96 , 75 , 53 , 90 , 142 , 90},
{90 , 37 , 112 , 90 , 93 , 102 , 97 , 75 , 55 , 90 , 144 , 90},
{90 , 37 , 114 , 90 , 93 , 97 , 98 , 77 , 58 , 90 , 145 , 90},
{90 , 35 , 117 , 90 , 93 , 92 , 98 , 78 , 58 , 90 , 146 , 90},
{90 , 34 , 117 , 90 , 93 , 86 , 99 , 78 , 60 , 90 , 145 , 90},
{90 , 33 , 119 , 90 , 87 , 86 , 101 , 80 , 62 , 90 , 145 , 90},
{90 , 34 , 121 , 90 , 82 , 86 , 101 , 81 , 62 , 90 , 144 , 90},
{90 , 35 , 121 , 90 , 77 , 86 , 102 , 81 , 65 , 90 , 142 , 90},
{90 , 37 , 124 , 90 , 73 , 86 , 104 , 82 , 67 , 90 , 142 , 90},
{90 , 39 , 126 , 90 , 70 , 86 , 104 , 83 , 67 , 90 , 140 , 90},
{90 , 47 , 126 , 90 , 77 , 86 , 105 , 83 , 70 , 90 , 138 , 90},
{90 , 55 , 128 , 90 , 84 , 86 , 107 , 84 , 73 , 90 , 138 , 90},
{90 , 62 , 130 , 90 , 92 , 86 , 107 , 85 , 73 , 90 , 136 , 90},
{90 , 70 , 130 , 90 , 101 , 86 , 109 , 85 , 75 , 90 , 134 , 90},
{90 , 78 , 132 , 90 , 111 , 86 , 111 , 85 , 78 , 90 , 134 , 90},
{90 , 78 , 134 , 90 , 111 , 85 , 101 , 86 , 70 , 90 , 132 , 90},
{90 , 75 , 134 , 90 , 109 , 85 , 92 , 86 , 62 , 90 , 130 , 90},
{90 , 73 , 136 , 90 , 107 , 85 , 84 , 86 , 55 , 90 , 130 , 90},
{90 , 73 , 138 , 90 , 107 , 84 , 77 , 86 , 47 , 90 , 128 , 90},
{90 , 70 , 138 , 90 , 105 , 83 , 70 , 86 , 39 , 90 , 126 , 90},
{90 , 67 , 140 , 90 , 104 , 83 , 73 , 86 , 37 , 90 , 126 , 90},
{90 , 67 , 142 , 90 , 104 , 82 , 77 , 86 , 35 , 90 , 124 , 90},
{90 , 65 , 142 , 90 , 102 , 81 , 82 , 86 , 34 , 90 , 121 , 90},
{90 , 62 , 144 , 90 , 101 , 81 , 87 , 86 , 33 , 90 , 121 , 90},
};

int Move_Backward_H [][12] PROGMEM = {
{90 , 45 , 101 , 90 , 93 , 85 , 111 , 68 , 78 , 90 , 132 , 90},
{90 , 47 , 109 , 90 , 94 , 86 , 111 , 78 , 78 , 90 , 134 , 90},
{90 , 49 , 117 , 90 , 94 , 86 , 109 , 87 , 75 , 90 , 134 , 90},
{90 , 49 , 124 , 90 , 94 , 86 , 107 , 95 , 73 , 90 , 136 , 90},
{90 , 51 , 132 , 90 , 95 , 86 , 107 , 102 , 73 , 90 , 138 , 90},
{90 , 53 , 140 , 90 , 96 , 86 , 105 , 109 , 70 , 90 , 138 , 90},
{90 , 53 , 142 , 90 , 96 , 86 , 104 , 106 , 67 , 90 , 140 , 90},
{90 , 55 , 144 , 90 , 97 , 86 , 104 , 102 , 67 , 90 , 142 , 90},
{90 , 58 , 145 , 90 , 98 , 86 , 102 , 97 , 65 , 90 , 142 , 90},
{90 , 58 , 146 , 90 , 98 , 86 , 101 , 92 , 62 , 90 , 144 , 90},
{90 , 60 , 145 , 90 , 99 , 86 , 101 , 86 , 62 , 90 , 145 , 90},
{90 , 62 , 145 , 90 , 101 , 92 , 99 , 86 , 60 , 90 , 146 , 90},
{90 , 62 , 144 , 90 , 101 , 97 , 98 , 86 , 58 , 90 , 145 , 90},
{90 , 65 , 142 , 90 , 102 , 102 , 98 , 86 , 58 , 90 , 144 , 90},
{90 , 67 , 142 , 90 , 104 , 106 , 97 , 86 , 55 , 90 , 142 , 90},
{90 , 67 , 140 , 90 , 104 , 109 , 96 , 86 , 53 , 90 , 140 , 90},
{90 , 70 , 138 , 90 , 105 , 102 , 96 , 86 , 53 , 90 , 132 , 90},
{90 , 73 , 138 , 90 , 107 , 95 , 95 , 86 , 51 , 90 , 124 , 90},
{90 , 73 , 136 , 90 , 107 , 87 , 94 , 86 , 49 , 90 , 117 , 90},
{90 , 75 , 134 , 90 , 109 , 78 , 94 , 86 , 49 , 90 , 109 , 90},
{90 , 78 , 134 , 90 , 111 , 68 , 94 , 86 , 47 , 90 , 101 , 90},
{90 , 70 , 132 , 90 , 101 , 68 , 93 , 85 , 45 , 90 , 101 , 90},
{90 , 62 , 130 , 90 , 92 , 70 , 93 , 85 , 45 , 90 , 104 , 90},
{90 , 55 , 130 , 90 , 84 , 72 , 93 , 85 , 43 , 90 , 106 , 90},
{90 , 47 , 128 , 90 , 77 , 72 , 93 , 84 , 41 , 90 , 106 , 90},
{90 , 39 , 126 , 90 , 70 , 74 , 93 , 83 , 41 , 90 , 109 , 90},
{90 , 37 , 126 , 90 , 73 , 75 , 93 , 83 , 39 , 90 , 112 , 90},
{90 , 35 , 124 , 90 , 77 , 75 , 93 , 82 , 37 , 90 , 112 , 90},
{90 , 34 , 121 , 90 , 82 , 77 , 93 , 81 , 37 , 90 , 114 , 90},
{90 , 33 , 121 , 90 , 87 , 78 , 93 , 81 , 35 , 90 , 117 , 90},
{90 , 34 , 119 , 90 , 93 , 78 , 93 , 80 , 34 , 90 , 117 , 90},
{90 , 34 , 117 , 90 , 93 , 80 , 87 , 78 , 33 , 90 , 119 , 90},
{90 , 35 , 117 , 90 , 93 , 81 , 82 , 78 , 34 , 90 , 121 , 90},
{90 , 37 , 114 , 90 , 93 , 81 , 77 , 77 , 35 , 90 , 121 , 90},
{90 , 37 , 112 , 90 , 93 , 82 , 73 , 75 , 37 , 90 , 124 , 90},
{90 , 39 , 112 , 90 , 93 , 83 , 70 , 75 , 39 , 90 , 126 , 90},
{90 , 41 , 109 , 90 , 93 , 83 , 77 , 74 , 47 , 90 , 126 , 90},
{90 , 41 , 106 , 90 , 93 , 84 , 84 , 72 , 55 , 90 , 128 , 90},
{90 , 43 , 106 , 90 , 93 , 85 , 92 , 72 , 62 , 90 , 130 , 90},
{90 , 45 , 104 , 90 , 93 , 85 , 101 , 70 , 70 , 90 , 130 , 90},
};

int Move_Turn_L_H [][12] PROGMEM = {
{90 , 67 , 136 , 90 , 104 , 78 , 93 , 86 , 43 , 90 , 115 , 90},
{90 , 64 , 137 , 90 , 101 , 75 , 93 , 89 , 43 , 90 , 112 , 90},
{90 , 60 , 137 , 90 , 99 , 75 , 93 , 93 , 44 , 90 , 112 , 90},
{90 , 60 , 137 , 90 , 99 , 73 , 93 , 96 , 45 , 90 , 108 , 90},
{90 , 56 , 136 , 90 , 97 , 70 , 93 , 98 , 45 , 90 , 104 , 90},
{90 , 53 , 135 , 90 , 96 , 70 , 94 , 101 , 46 , 90 , 104 , 90},
{90 , 53 , 131 , 90 , 96 , 67 , 94 , 97 , 47 , 90 , 100 , 90},
{90 , 50 , 127 , 90 , 95 , 63 , 94 , 92 , 47 , 90 , 95 , 90},
{90 , 47 , 123 , 90 , 94 , 63 , 94 , 87 , 48 , 90 , 95 , 90},
{90 , 47 , 118 , 90 , 94 , 59 , 94 , 82 , 49 , 90 , 91 , 90},
{90 , 44 , 114 , 90 , 93 , 54 , 94 , 77 , 49 , 90 , 87 , 90},
{90 , 41 , 114 , 90 , 93 , 67 , 95 , 77 , 50 , 90 , 97 , 90},
{90 , 41 , 115 , 90 , 93 , 78 , 95 , 78 , 51 , 90 , 107 , 90},
{90 , 38 , 117 , 90 , 93 , 87 , 95 , 78 , 51 , 90 , 117 , 90},
{90 , 35 , 117 , 90 , 93 , 94 , 96 , 78 , 52 , 90 , 126 , 90},
{90 , 35 , 118 , 90 , 93 , 101 , 96 , 79 , 53 , 90 , 135 , 90},
{90 , 33 , 119 , 90 , 93 , 100 , 96 , 80 , 53 , 90 , 141 , 90},
{90 , 31 , 119 , 90 , 94 , 97 , 96 , 80 , 54 , 90 , 145 , 90},
{90 , 31 , 120 , 90 , 94 , 94 , 97 , 80 , 55 , 90 , 149 , 90},
{90 , 29 , 121 , 90 , 95 , 89 , 97 , 81 , 55 , 90 , 151 , 90},
{90 , 27 , 121 , 90 , 96 , 83 , 97 , 81 , 56 , 90 , 152 , 90},
{90 , 28 , 123 , 90 , 90 , 83 , 98 , 82 , 58 , 90 , 152 , 90},
{90 , 30 , 124 , 90 , 85 , 84 , 98 , 82 , 58 , 90 , 150 , 90},
{90 , 34 , 124 , 90 , 82 , 85 , 99 , 82 , 59 , 90 , 148 , 90},
{90 , 38 , 125 , 90 , 79 , 85 , 99 , 83 , 60 , 90 , 148 , 90},
{90 , 44 , 126 , 90 , 78 , 86 , 99 , 83 , 60 , 90 , 146 , 90},
{90 , 53 , 126 , 90 , 85 , 86 , 100 , 83 , 61 , 90 , 144 , 90},
{90 , 62 , 127 , 90 , 92 , 86 , 101 , 83 , 62 , 90 , 144 , 90},
{90 , 72 , 128 , 90 , 101 , 86 , 101 , 84 , 62 , 90 , 141 , 90},
{90 , 82 , 128 , 90 , 112 , 86 , 101 , 84 , 64 , 90 , 138 , 90},
{90 , 92 , 129 , 90 , 125 , 86 , 102 , 84 , 65 , 90 , 138 , 90},
{90 , 92 , 130 , 90 , 125 , 86 , 97 , 85 , 61 , 90 , 135 , 90},
{90 , 88 , 130 , 90 , 120 , 85 , 92 , 85 , 56 , 90 , 132 , 90},
{90 , 84 , 131 , 90 , 116 , 85 , 87 , 85 , 52 , 90 , 132 , 90},
{90 , 84 , 132 , 90 , 116 , 84 , 82 , 85 , 48 , 90 , 129 , 90},
{90 , 79 , 132 , 90 , 112 , 83 , 78 , 85 , 44 , 90 , 126 , 90},
{90 , 75 , 133 , 90 , 109 , 83 , 81 , 85 , 43 , 90 , 126 , 90},
{90 , 75 , 134 , 90 , 109 , 82 , 83 , 86 , 42 , 90 , 123 , 90},
{90 , 71 , 134 , 90 , 106 , 80 , 86 , 86 , 42 , 90 , 119 , 90},
{90 , 67 , 135 , 90 , 104 , 80 , 90 , 86 , 42 , 90 , 119 , 90},
};

int Move_Turn_R_H [][12] PROGMEM = {
{90 , 58 , 152 , 90 , 98 , 82 , 96 , 83 , 27 , 90 , 123 , 90},
{90 , 56 , 151 , 90 , 97 , 81 , 96 , 89 , 27 , 90 , 121 , 90},
{90 , 55 , 149 , 90 , 97 , 81 , 95 , 94 , 29 , 90 , 121 , 90},
{90 , 55 , 145 , 90 , 97 , 80 , 94 , 97 , 31 , 90 , 120 , 90},
{90 , 54 , 141 , 90 , 96 , 80 , 94 , 100 , 31 , 90 , 119 , 90},
{90 , 53 , 135 , 90 , 96 , 80 , 93 , 101 , 33 , 90 , 119 , 90},
{90 , 53 , 126 , 90 , 96 , 79 , 93 , 94 , 35 , 90 , 118 , 90},
{90 , 52 , 117 , 90 , 96 , 78 , 93 , 87 , 35 , 90 , 117 , 90},
{90 , 51 , 107 , 90 , 95 , 78 , 93 , 78 , 38 , 90 , 117 , 90},
{90 , 51 , 97 , 90 , 95 , 78 , 93 , 67 , 41 , 90 , 115 , 90},
{90 , 50 , 87 , 90 , 95 , 77 , 93 , 54 , 41 , 90 , 114 , 90},
{90 , 49 , 87 , 90 , 94 , 82 , 93 , 54 , 44 , 90 , 118 , 90},
{90 , 49 , 91 , 90 , 94 , 87 , 94 , 59 , 47 , 90 , 123 , 90},
{90 , 48 , 95 , 90 , 94 , 92 , 94 , 63 , 47 , 90 , 127 , 90},
{90 , 47 , 95 , 90 , 94 , 97 , 95 , 63 , 50 , 90 , 131 , 90},
{90 , 47 , 100 , 90 , 94 , 101 , 96 , 67 , 53 , 90 , 135 , 90},
{90 , 46 , 104 , 90 , 94 , 98 , 96 , 70 , 53 , 90 , 136 , 90},
{90 , 45 , 104 , 90 , 93 , 96 , 97 , 70 , 56 , 90 , 137 , 90},
{90 , 45 , 108 , 90 , 93 , 93 , 99 , 73 , 60 , 90 , 137 , 90},
{90 , 44 , 112 , 90 , 93 , 89 , 99 , 75 , 60 , 90 , 137 , 90},
{90 , 43 , 112 , 90 , 93 , 86 , 101 , 75 , 64 , 90 , 136 , 90},
{90 , 42 , 115 , 90 , 90 , 86 , 104 , 78 , 67 , 90 , 136 , 90},
{90 , 42 , 119 , 90 , 86 , 86 , 104 , 80 , 67 , 90 , 135 , 90},
{90 , 42 , 119 , 90 , 83 , 86 , 106 , 80 , 71 , 90 , 134 , 90},
{90 , 43 , 123 , 90 , 81 , 86 , 109 , 82 , 75 , 90 , 134 , 90},
{90 , 44 , 126 , 90 , 78 , 85 , 109 , 83 , 75 , 90 , 133 , 90},
{90 , 48 , 126 , 90 , 82 , 85 , 112 , 83 , 79 , 90 , 132 , 90},
{90 , 52 , 129 , 90 , 87 , 85 , 116 , 84 , 84 , 90 , 132 , 90},
{90 , 56 , 132 , 90 , 92 , 85 , 116 , 85 , 84 , 90 , 131 , 90},
{90 , 61 , 132 , 90 , 97 , 85 , 120 , 85 , 88 , 90 , 130 , 90},
{90 , 65 , 135 , 90 , 102 , 85 , 125 , 86 , 92 , 90 , 130 , 90},
{90 , 65 , 138 , 90 , 102 , 84 , 112 , 86 , 82 , 90 , 129 , 90},
{90 , 64 , 138 , 90 , 101 , 84 , 101 , 86 , 72 , 90 , 128 , 90},
{90 , 62 , 141 , 90 , 101 , 84 , 92 , 86 , 62 , 90 , 128 , 90},
{90 , 62 , 144 , 90 , 101 , 83 , 85 , 86 , 53 , 90 , 127 , 90},
{90 , 61 , 144 , 90 , 100 , 83 , 78 , 86 , 44 , 90 , 126 , 90},
{90 , 60 , 146 , 90 , 99 , 83 , 79 , 86 , 38 , 90 , 126 , 90},
{90 , 60 , 148 , 90 , 99 , 83 , 82 , 85 , 34 , 90 , 125 , 90},
{90 , 59 , 148 , 90 , 99 , 82 , 85 , 85 , 30 , 90 , 124 , 90},
{90 , 58 , 150 , 90 , 98 , 82 , 90 , 84 , 28 , 90 , 124 , 90},
};

int Move_Circle_L_2T_H [][12] PROGMEM = {
{98 , 54 , 125 , 81 , 97 , 82 , 97 , 82 , 54 , 98 , 125 , 81},
{98 , 54 , 125 , 81 , 97 , 82 , 97 , 82 , 54 , 98 , 125 , 81},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
{97 , 54 , 128 , 82 , 97 , 88 , 97 , 88 , 54 , 97 , 128 , 82},
{97 , 54 , 128 , 82 , 97 , 88 , 97 , 88 , 54 , 97 , 128 , 82},
{96 , 53 , 129 , 83 , 97 , 88 , 97 , 88 , 53 , 96 , 129 , 83},
{95 , 53 , 131 , 84 , 97 , 94 , 97 , 94 , 53 , 95 , 131 , 84},
{95 , 53 , 131 , 84 , 97 , 94 , 97 , 94 , 53 , 95 , 131 , 84},
{94 , 53 , 132 , 85 , 96 , 94 , 96 , 94 , 53 , 94 , 132 , 85},
{93 , 53 , 134 , 85 , 96 , 99 , 96 , 99 , 53 , 93 , 134 , 85},
{93 , 53 , 134 , 85 , 96 , 99 , 96 , 99 , 53 , 93 , 134 , 85},
{92 , 53 , 134 , 86 , 96 , 99 , 96 , 99 , 53 , 92 , 134 , 86},
{91 , 53 , 137 , 87 , 96 , 104 , 96 , 104 , 53 , 91 , 137 , 87},
{91 , 53 , 137 , 87 , 96 , 104 , 96 , 104 , 53 , 91 , 137 , 87},
{90 , 53 , 137 , 88 , 96 , 104 , 96 , 104 , 53 , 90 , 137 , 88},
{90 , 53 , 140 , 90 , 96 , 109 , 96 , 109 , 53 , 90 , 140 , 90},
{90 , 53 , 137 , 90 , 96 , 104 , 96 , 104 , 53 , 90 , 137 , 90},
{89 , 53 , 137 , 91 , 96 , 104 , 96 , 104 , 53 , 89 , 137 , 91},
{88 , 53 , 137 , 92 , 96 , 104 , 96 , 104 , 53 , 88 , 137 , 92},
{88 , 53 , 134 , 92 , 96 , 99 , 96 , 99 , 53 , 88 , 134 , 92},
{87 , 53 , 134 , 93 , 96 , 99 , 96 , 99 , 53 , 87 , 134 , 93},
{86 , 53 , 134 , 94 , 96 , 99 , 96 , 99 , 53 , 86 , 134 , 94},
{86 , 53 , 132 , 93 , 96 , 94 , 96 , 94 , 53 , 86 , 132 , 93},
{85 , 53 , 132 , 94 , 96 , 94 , 96 , 94 , 53 , 85 , 132 , 94},
{84 , 53 , 131 , 95 , 97 , 94 , 97 , 94 , 53 , 84 , 131 , 95},
{84 , 53 , 129 , 95 , 97 , 88 , 97 , 88 , 53 , 84 , 129 , 95},
{83 , 53 , 129 , 96 , 97 , 88 , 97 , 88 , 53 , 83 , 129 , 96},
{82 , 54 , 128 , 97 , 97 , 88 , 97 , 88 , 54 , 82 , 128 , 97},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
{81 , 54 , 125 , 98 , 97 , 82 , 97 , 82 , 54 , 81 , 125 , 98},
{81 , 54 , 125 , 98 , 97 , 82 , 97 , 82 , 54 , 81 , 125 , 98},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
{82 , 51 , 125 , 97 , 91 , 82 , 91 , 82 , 51 , 82 , 125 , 97},
{82 , 51 , 125 , 97 , 91 , 82 , 91 , 82 , 51 , 82 , 125 , 97},
{83 , 50 , 126 , 96 , 91 , 82 , 91 , 82 , 50 , 83 , 126 , 96},
{84 , 48 , 126 , 95 , 85 , 82 , 85 , 82 , 48 , 84 , 126 , 95},
{84 , 48 , 126 , 95 , 85 , 82 , 85 , 82 , 48 , 84 , 126 , 95},
{85 , 47 , 126 , 94 , 85 , 83 , 85 , 83 , 47 , 85 , 126 , 94},
{85 , 45 , 126 , 93 , 80 , 83 , 80 , 83 , 45 , 85 , 126 , 93},
{85 , 45 , 126 , 93 , 80 , 83 , 80 , 83 , 45 , 85 , 126 , 93},
{86 , 45 , 126 , 92 , 80 , 83 , 80 , 83 , 45 , 86 , 126 , 92},
{87 , 42 , 126 , 91 , 75 , 83 , 75 , 83 , 42 , 87 , 126 , 91},
{87 , 42 , 126 , 91 , 75 , 83 , 75 , 83 , 42 , 87 , 126 , 91},
{88 , 42 , 126 , 90 , 75 , 83 , 75 , 83 , 42 , 88 , 126 , 90},
{90 , 39 , 126 , 90 , 70 , 83 , 70 , 83 , 39 , 90 , 126 , 90},
{90 , 42 , 126 , 90 , 75 , 83 , 75 , 83 , 42 , 90 , 126 , 90},
{91 , 42 , 126 , 89 , 75 , 83 , 75 , 83 , 42 , 91 , 126 , 89},
{92 , 42 , 126 , 88 , 75 , 83 , 75 , 83 , 42 , 92 , 126 , 88},
{92 , 45 , 126 , 88 , 80 , 83 , 80 , 83 , 45 , 92 , 126 , 88},
{93 , 45 , 126 , 87 , 80 , 83 , 80 , 83 , 45 , 93 , 126 , 87},
{94 , 45 , 126 , 86 , 80 , 83 , 80 , 83 , 45 , 94 , 126 , 86},
{93 , 47 , 126 , 86 , 85 , 83 , 85 , 83 , 47 , 93 , 126 , 86},
{94 , 47 , 126 , 85 , 85 , 83 , 85 , 83 , 47 , 94 , 126 , 85},
{95 , 48 , 126 , 84 , 85 , 82 , 85 , 82 , 48 , 95 , 126 , 84},
{95 , 50 , 126 , 84 , 91 , 82 , 91 , 82 , 50 , 95 , 126 , 84},
{96 , 50 , 126 , 83 , 91 , 82 , 91 , 82 , 50 , 96 , 126 , 83},
{97 , 51 , 125 , 82 , 91 , 82 , 91 , 82 , 51 , 97 , 125 , 82},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
};

int Move_Circle_R_2T_H [][12] PROGMEM = {
{81 , 54 , 125 , 98 , 97 , 82 , 97 , 82 , 54 , 81 , 125 , 98},
{81 , 54 , 125 , 98 , 97 , 82 , 97 , 82 , 54 , 81 , 125 , 98},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
{82 , 54 , 128 , 97 , 97 , 88 , 97 , 88 , 54 , 82 , 128 , 97},
{82 , 54 , 128 , 97 , 97 , 88 , 97 , 88 , 54 , 82 , 128 , 97},
{83 , 53 , 129 , 96 , 97 , 88 , 97 , 88 , 53 , 83 , 129 , 96},
{84 , 53 , 131 , 95 , 97 , 94 , 97 , 94 , 53 , 84 , 131 , 95},
{84 , 53 , 131 , 95 , 97 , 94 , 97 , 94 , 53 , 84 , 131 , 95},
{85 , 53 , 132 , 94 , 96 , 94 , 96 , 94 , 53 , 85 , 132 , 94},
{86 , 53 , 134 , 94 , 96 , 99 , 96 , 99 , 53 , 86 , 134 , 94},
{86 , 53 , 134 , 94 , 96 , 99 , 96 , 99 , 53 , 86 , 134 , 94},
{87 , 53 , 134 , 93 , 96 , 99 , 96 , 99 , 53 , 87 , 134 , 93},
{88 , 53 , 137 , 92 , 96 , 104 , 96 , 104 , 53 , 88 , 137 , 92},
{88 , 53 , 137 , 92 , 96 , 104 , 96 , 104 , 53 , 88 , 137 , 92},
{89 , 53 , 137 , 91 , 96 , 104 , 96 , 104 , 53 , 89 , 137 , 91},
{90 , 53 , 140 , 90 , 96 , 109 , 96 , 109 , 53 , 90 , 140 , 90},
{90 , 53 , 137 , 90 , 96 , 104 , 96 , 104 , 53 , 90 , 137 , 90},
{90 , 53 , 137 , 88 , 96 , 104 , 96 , 104 , 53 , 90 , 137 , 88},
{91 , 53 , 137 , 87 , 96 , 104 , 96 , 104 , 53 , 91 , 137 , 87},
{91 , 53 , 134 , 87 , 96 , 99 , 96 , 99 , 53 , 91 , 134 , 87},
{92 , 53 , 134 , 86 , 96 , 99 , 96 , 99 , 53 , 92 , 134 , 86},
{93 , 53 , 134 , 85 , 96 , 99 , 96 , 99 , 53 , 93 , 134 , 85},
{93 , 53 , 132 , 86 , 96 , 94 , 96 , 94 , 53 , 93 , 132 , 86},
{94 , 53 , 132 , 85 , 96 , 94 , 96 , 94 , 53 , 94 , 132 , 85},
{95 , 53 , 131 , 84 , 97 , 94 , 97 , 94 , 53 , 95 , 131 , 84},
{95 , 53 , 129 , 84 , 97 , 88 , 97 , 88 , 53 , 95 , 129 , 84},
{96 , 53 , 129 , 83 , 97 , 88 , 97 , 88 , 53 , 96 , 129 , 83},
{97 , 54 , 128 , 82 , 97 , 88 , 97 , 88 , 54 , 97 , 128 , 82},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
{98 , 54 , 125 , 81 , 97 , 82 , 97 , 82 , 54 , 98 , 125 , 81},
{98 , 54 , 125 , 81 , 97 , 82 , 97 , 82 , 54 , 98 , 125 , 81},
{97 , 54 , 125 , 82 , 97 , 82 , 97 , 82 , 54 , 97 , 125 , 82},
{97 , 51 , 125 , 82 , 91 , 82 , 91 , 82 , 51 , 97 , 125 , 82},
{97 , 51 , 125 , 82 , 91 , 82 , 91 , 82 , 51 , 97 , 125 , 82},
{96 , 50 , 126 , 83 , 91 , 82 , 91 , 82 , 50 , 96 , 126 , 83},
{95 , 48 , 126 , 84 , 85 , 82 , 85 , 82 , 48 , 95 , 126 , 84},
{95 , 48 , 126 , 84 , 85 , 82 , 85 , 82 , 48 , 95 , 126 , 84},
{94 , 47 , 126 , 85 , 85 , 83 , 85 , 83 , 47 , 94 , 126 , 85},
{94 , 45 , 126 , 86 , 80 , 83 , 80 , 83 , 45 , 94 , 126 , 86},
{94 , 45 , 126 , 86 , 80 , 83 , 80 , 83 , 45 , 94 , 126 , 86},
{93 , 45 , 126 , 87 , 80 , 83 , 80 , 83 , 45 , 93 , 126 , 87},
{92 , 42 , 126 , 88 , 75 , 83 , 75 , 83 , 42 , 92 , 126 , 88},
{92 , 42 , 126 , 88 , 75 , 83 , 75 , 83 , 42 , 92 , 126 , 88},
{91 , 42 , 126 , 89 , 75 , 83 , 75 , 83 , 42 , 91 , 126 , 89},
{90 , 39 , 126 , 90 , 70 , 83 , 70 , 83 , 39 , 90 , 126 , 90},
{90 , 42 , 126 , 90 , 75 , 83 , 75 , 83 , 42 , 90 , 126 , 90},
{88 , 42 , 126 , 90 , 75 , 83 , 75 , 83 , 42 , 88 , 126 , 90},
{87 , 42 , 126 , 91 , 75 , 83 , 75 , 83 , 42 , 87 , 126 , 91},
{87 , 45 , 126 , 91 , 80 , 83 , 80 , 83 , 45 , 87 , 126 , 91},
{86 , 45 , 126 , 92 , 80 , 83 , 80 , 83 , 45 , 86 , 126 , 92},
{85 , 45 , 126 , 93 , 80 , 83 , 80 , 83 , 45 , 85 , 126 , 93},
{86 , 47 , 126 , 93 , 85 , 83 , 85 , 83 , 47 , 86 , 126 , 93},
{85 , 47 , 126 , 94 , 85 , 83 , 85 , 83 , 47 , 85 , 126 , 94},
{84 , 48 , 126 , 95 , 85 , 82 , 85 , 82 , 48 , 84 , 126 , 95},
{84 , 50 , 126 , 95 , 91 , 82 , 91 , 82 , 50 , 84 , 126 , 95},
{83 , 50 , 126 , 96 , 91 , 82 , 91 , 82 , 50 , 83 , 126 , 96},
{82 , 51 , 125 , 97 , 91 , 82 , 91 , 82 , 51 , 82 , 125 , 97},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
{82 , 54 , 125 , 97 , 97 , 82 , 97 , 82 , 54 , 82 , 125 , 97},
};

int Move_Forward_L [][12] PROGMEM = {
{90 , 54 , 158 , 90 , 83 , 98 , 75 , 104 , 21 , 90 , 127 , 90},
{90 , 52 , 158 , 90 , 81 , 96 , 75 , 109 , 21 , 90 , 125 , 90},
{90 , 49 , 156 , 90 , 80 , 96 , 75 , 114 , 23 , 90 , 125 , 90},
{90 , 49 , 154 , 90 , 80 , 95 , 75 , 118 , 25 , 90 , 122 , 90},
{90 , 46 , 151 , 90 , 79 , 93 , 75 , 122 , 25 , 90 , 119 , 90},
{90 , 44 , 147 , 90 , 78 , 93 , 75 , 124 , 27 , 90 , 119 , 90},
{90 , 44 , 138 , 90 , 78 , 92 , 75 , 117 , 29 , 90 , 117 , 90},
{90 , 41 , 131 , 90 , 77 , 90 , 75 , 110 , 29 , 90 , 114 , 90},
{90 , 39 , 123 , 90 , 76 , 90 , 75 , 103 , 31 , 90 , 114 , 90},
{90 , 39 , 116 , 90 , 76 , 88 , 75 , 95 , 34 , 90 , 111 , 90},
{90 , 36 , 108 , 90 , 76 , 86 , 75 , 86 , 34 , 90 , 108 , 90},
{90 , 34 , 108 , 90 , 75 , 95 , 76 , 86 , 36 , 90 , 116 , 90},
{90 , 34 , 111 , 90 , 75 , 103 , 76 , 88 , 39 , 90 , 123 , 90},
{90 , 31 , 114 , 90 , 75 , 110 , 76 , 90 , 39 , 90 , 131 , 90},
{90 , 29 , 114 , 90 , 75 , 117 , 77 , 90 , 41 , 90 , 138 , 90},
{90 , 29 , 117 , 90 , 75 , 124 , 78 , 92 , 44 , 90 , 147 , 90},
{90 , 27 , 119 , 90 , 75 , 122 , 78 , 93 , 44 , 90 , 151 , 90},
{90 , 25 , 119 , 90 , 75 , 118 , 79 , 93 , 46 , 90 , 154 , 90},
{90 , 25 , 122 , 90 , 75 , 114 , 80 , 95 , 49 , 90 , 156 , 90},
{90 , 23 , 125 , 90 , 75 , 109 , 80 , 96 , 49 , 90 , 158 , 90},
{90 , 21 , 125 , 90 , 75 , 104 , 81 , 96 , 52 , 90 , 158 , 90},
{90 , 21 , 127 , 90 , 70 , 104 , 83 , 98 , 54 , 90 , 158 , 90},
{90 , 23 , 130 , 90 , 65 , 104 , 83 , 99 , 54 , 90 , 156 , 90},
{90 , 25 , 130 , 90 , 61 , 104 , 84 , 99 , 57 , 90 , 154 , 90},
{90 , 28 , 133 , 90 , 57 , 104 , 86 , 100 , 60 , 90 , 154 , 90},
{90 , 32 , 135 , 90 , 55 , 104 , 86 , 101 , 60 , 90 , 152 , 90},
{90 , 41 , 135 , 90 , 62 , 104 , 87 , 101 , 62 , 90 , 150 , 90},
{90 , 48 , 138 , 90 , 69 , 104 , 89 , 102 , 65 , 90 , 150 , 90},
{90 , 56 , 140 , 90 , 76 , 104 , 89 , 103 , 65 , 90 , 148 , 90},
{90 , 63 , 140 , 90 , 84 , 104 , 91 , 103 , 68 , 90 , 145 , 90},
{90 , 71 , 143 , 90 , 93 , 104 , 93 , 103 , 71 , 90 , 145 , 90},
{90 , 71 , 145 , 90 , 93 , 103 , 84 , 104 , 63 , 90 , 143 , 90},
{90 , 68 , 145 , 90 , 91 , 103 , 76 , 104 , 56 , 90 , 140 , 90},
{90 , 65 , 148 , 90 , 89 , 103 , 69 , 104 , 48 , 90 , 140 , 90},
{90 , 65 , 150 , 90 , 89 , 102 , 62 , 104 , 41 , 90 , 138 , 90},
{90 , 62 , 150 , 90 , 87 , 101 , 55 , 104 , 32 , 90 , 135 , 90},
{90 , 60 , 152 , 90 , 86 , 101 , 57 , 104 , 28 , 90 , 135 , 90},
{90 , 60 , 154 , 90 , 86 , 100 , 61 , 104 , 25 , 90 , 133 , 90},
{90 , 57 , 154 , 90 , 84 , 99 , 65 , 104 , 23 , 90 , 130 , 90},
{90 , 54 , 156 , 90 , 83 , 99 , 70 , 104 , 21 , 90 , 130 , 90},
};
int Move_Backward_L [][12] PROGMEM = {
{90 , 34 , 108 , 90 , 75 , 103 , 93 , 86 , 71 , 90 , 143 , 90},
{90 , 36 , 116 , 90 , 76 , 104 , 93 , 95 , 71 , 90 , 145 , 90},
{90 , 39 , 123 , 90 , 76 , 104 , 91 , 103 , 68 , 90 , 145 , 90},
{90 , 39 , 131 , 90 , 76 , 104 , 89 , 110 , 65 , 90 , 148 , 90},
{90 , 41 , 138 , 90 , 77 , 104 , 89 , 117 , 65 , 90 , 150 , 90},
{90 , 44 , 147 , 90 , 78 , 104 , 87 , 124 , 62 , 90 , 150 , 90},
{90 , 44 , 151 , 90 , 78 , 104 , 86 , 122 , 60 , 90 , 152 , 90},
{90 , 46 , 154 , 90 , 79 , 104 , 86 , 118 , 60 , 90 , 154 , 90},
{90 , 49 , 156 , 90 , 80 , 104 , 84 , 114 , 57 , 90 , 154 , 90},
{90 , 49 , 158 , 90 , 80 , 104 , 83 , 109 , 54 , 90 , 156 , 90},
{90 , 52 , 158 , 90 , 81 , 104 , 83 , 104 , 54 , 90 , 158 , 90},
{90 , 54 , 158 , 90 , 83 , 109 , 81 , 104 , 52 , 90 , 158 , 90},
{90 , 54 , 156 , 90 , 83 , 114 , 80 , 104 , 49 , 90 , 156 , 90},
{90 , 57 , 154 , 90 , 84 , 118 , 80 , 104 , 49 , 90 , 154 , 90},
{90 , 60 , 154 , 90 , 86 , 122 , 79 , 104 , 46 , 90 , 151 , 90},
{90 , 60 , 152 , 90 , 86 , 124 , 78 , 104 , 44 , 90 , 147 , 90},
{90 , 62 , 150 , 90 , 87 , 117 , 78 , 104 , 44 , 90 , 138 , 90},
{90 , 65 , 150 , 90 , 89 , 110 , 77 , 104 , 41 , 90 , 131 , 90},
{90 , 65 , 148 , 90 , 89 , 103 , 76 , 104 , 39 , 90 , 123 , 90},
{90 , 68 , 145 , 90 , 91 , 95 , 76 , 104 , 39 , 90 , 116 , 90},
{90 , 71 , 145 , 90 , 93 , 86 , 76 , 104 , 36 , 90 , 108 , 90},
{90 , 63 , 143 , 90 , 84 , 86 , 75 , 103 , 34 , 90 , 108 , 90},
{90 , 56 , 140 , 90 , 76 , 88 , 75 , 103 , 34 , 90 , 111 , 90},
{90 , 48 , 140 , 90 , 69 , 90 , 75 , 103 , 31 , 90 , 114 , 90},
{90 , 41 , 138 , 90 , 62 , 90 , 75 , 102 , 29 , 90 , 114 , 90},
{90 , 32 , 135 , 90 , 55 , 92 , 75 , 101 , 29 , 90 , 117 , 90},
{90 , 28 , 135 , 90 , 57 , 93 , 75 , 101 , 27 , 90 , 119 , 90},
{90 , 25 , 133 , 90 , 61 , 93 , 75 , 100 , 25 , 90 , 119 , 90},
{90 , 23 , 130 , 90 , 65 , 95 , 75 , 99 , 25 , 90 , 122 , 90},
{90 , 21 , 130 , 90 , 70 , 96 , 75 , 99 , 23 , 90 , 125 , 90},
{90 , 21 , 127 , 90 , 75 , 96 , 75 , 98 , 21 , 90 , 125 , 90},
{90 , 21 , 125 , 90 , 75 , 98 , 70 , 96 , 21 , 90 , 127 , 90},
{90 , 23 , 125 , 90 , 75 , 99 , 65 , 96 , 23 , 90 , 130 , 90},
{90 , 25 , 122 , 90 , 75 , 99 , 61 , 95 , 25 , 90 , 130 , 90},
{90 , 25 , 119 , 90 , 75 , 100 , 57 , 93 , 28 , 90 , 133 , 90},
{90 , 27 , 119 , 90 , 75 , 101 , 55 , 93 , 32 , 90 , 135 , 90},
{90 , 29 , 117 , 90 , 75 , 101 , 62 , 92 , 41 , 90 , 135 , 90},
{90 , 29 , 114 , 90 , 75 , 102 , 69 , 90 , 48 , 90 , 138 , 90},
{90 , 31 , 114 , 90 , 75 , 103 , 76 , 90 , 56 , 90 , 140 , 90},
{90 , 34 , 111 , 90 , 75 , 103 , 84 , 88 , 63 , 90 , 140 , 90},
};
int Move_Turn_L_L [][12] PROGMEM = {
{90 , 60 , 148 , 90 , 86 , 96 , 75 , 104 , 31 , 90 , 123 , 90},
{90 , 56 , 147 , 90 , 83 , 93 , 75 , 107 , 31 , 90 , 119 , 90},
{90 , 52 , 147 , 90 , 81 , 93 , 75 , 110 , 33 , 90 , 119 , 90},
{90 , 52 , 146 , 90 , 81 , 91 , 75 , 112 , 34 , 90 , 115 , 90},
{90 , 48 , 145 , 90 , 80 , 88 , 75 , 115 , 34 , 90 , 111 , 90},
{90 , 44 , 143 , 90 , 78 , 88 , 76 , 117 , 35 , 90 , 111 , 90},
{90 , 44 , 139 , 90 , 78 , 85 , 76 , 113 , 36 , 90 , 107 , 90},
{90 , 40 , 135 , 90 , 77 , 82 , 76 , 108 , 36 , 90 , 103 , 90},
{90 , 36 , 130 , 90 , 76 , 82 , 76 , 104 , 37 , 90 , 103 , 90},
{90 , 36 , 126 , 90 , 76 , 78 , 76 , 100 , 39 , 90 , 98 , 90},
{90 , 33 , 122 , 90 , 75 , 74 , 76 , 95 , 39 , 90 , 94 , 90},
{90 , 29 , 122 , 90 , 75 , 85 , 77 , 95 , 40 , 90 , 104 , 90},
{90 , 29 , 123 , 90 , 75 , 94 , 77 , 96 , 41 , 90 , 113 , 90},
{90 , 26 , 125 , 90 , 75 , 103 , 77 , 96 , 41 , 90 , 123 , 90},
{90 , 23 , 125 , 90 , 75 , 110 , 78 , 96 , 42 , 90 , 133 , 90},
{90 , 23 , 126 , 90 , 75 , 117 , 78 , 97 , 44 , 90 , 143 , 90},
{90 , 20 , 127 , 90 , 75 , 116 , 78 , 98 , 44 , 90 , 151 , 90},
{90 , 17 , 127 , 90 , 76 , 114 , 79 , 98 , 45 , 90 , 156 , 90},
{90 , 17 , 129 , 90 , 76 , 111 , 79 , 98 , 46 , 90 , 161 , 90},
{90 , 15 , 130 , 90 , 77 , 106 , 79 , 99 , 46 , 90 , 164 , 90},
{90 , 13 , 130 , 90 , 78 , 101 , 80 , 99 , 48 , 90 , 166 , 90},
{90 , 15 , 131 , 90 , 73 , 101 , 80 , 99 , 49 , 90 , 166 , 90},
{90 , 18 , 133 , 90 , 68 , 102 , 80 , 100 , 49 , 90 , 164 , 90},
{90 , 23 , 133 , 90 , 65 , 103 , 81 , 100 , 50 , 90 , 162 , 90},
{90 , 28 , 134 , 90 , 63 , 103 , 81 , 100 , 52 , 90 , 162 , 90},
{90 , 36 , 135 , 90 , 62 , 104 , 81 , 101 , 52 , 90 , 159 , 90},
{90 , 46 , 135 , 90 , 69 , 104 , 82 , 101 , 53 , 90 , 156 , 90},
{90 , 56 , 137 , 90 , 76 , 104 , 83 , 101 , 54 , 90 , 156 , 90},
{90 , 66 , 138 , 90 , 85 , 104 , 83 , 102 , 54 , 90 , 153 , 90},
{90 , 75 , 138 , 90 , 94 , 104 , 83 , 102 , 56 , 90 , 150 , 90},
{90 , 85 , 139 , 90 , 105 , 104 , 84 , 102 , 57 , 90 , 150 , 90},
{90 , 85 , 140 , 90 , 105 , 104 , 79 , 103 , 53 , 90 , 146 , 90},
{90 , 81 , 140 , 90 , 101 , 103 , 75 , 103 , 49 , 90 , 143 , 90},
{90 , 76 , 142 , 90 , 97 , 103 , 71 , 103 , 44 , 90 , 143 , 90},
{90 , 76 , 143 , 90 , 97 , 102 , 66 , 103 , 40 , 90 , 139 , 90},
{90 , 72 , 143 , 90 , 94 , 101 , 62 , 103 , 36 , 90 , 135 , 90},
{90 , 68 , 144 , 90 , 91 , 101 , 64 , 103 , 34 , 90 , 135 , 90},
{90 , 68 , 145 , 90 , 91 , 99 , 67 , 104 , 33 , 90 , 131 , 90},
{90 , 64 , 145 , 90 , 88 , 98 , 69 , 104 , 32 , 90 , 127 , 90},
{90 , 60 , 146 , 90 , 86 , 98 , 72 , 104 , 32 , 90 , 127 , 90},
};
int Move_Turn_R_L [][12] PROGMEM = {
{90 , 49 , 166 , 90 , 80 , 99 , 78 , 101 , 13 , 90 , 131 , 90},
{90 , 48 , 164 , 90 , 80 , 99 , 78 , 106 , 13 , 90 , 130 , 90},
{90 , 46 , 161 , 90 , 79 , 99 , 77 , 111 , 15 , 90 , 130 , 90},
{90 , 46 , 156 , 90 , 79 , 98 , 76 , 114 , 17 , 90 , 129 , 90},
{90 , 45 , 151 , 90 , 79 , 98 , 76 , 116 , 17 , 90 , 127 , 90},
{90 , 44 , 143 , 90 , 78 , 98 , 75 , 117 , 20 , 90 , 127 , 90},
{90 , 44 , 133 , 90 , 78 , 97 , 75 , 110 , 23 , 90 , 126 , 90},
{90 , 42 , 123 , 90 , 78 , 96 , 75 , 103 , 23 , 90 , 125 , 90},
{90 , 41 , 113 , 90 , 77 , 96 , 75 , 94 , 26 , 90 , 125 , 90},
{90 , 41 , 104 , 90 , 77 , 96 , 75 , 85 , 29 , 90 , 123 , 90},
{90 , 40 , 94 , 90 , 77 , 95 , 75 , 74 , 29 , 90 , 122 , 90},
{90 , 39 , 94 , 90 , 76 , 100 , 75 , 74 , 33 , 90 , 126 , 90},
{90 , 39 , 98 , 90 , 76 , 104 , 76 , 78 , 36 , 90 , 130 , 90},
{90 , 37 , 103 , 90 , 76 , 108 , 76 , 82 , 36 , 90 , 135 , 90},
{90 , 36 , 103 , 90 , 76 , 113 , 77 , 82 , 40 , 90 , 139 , 90},
{90 , 36 , 107 , 90 , 76 , 117 , 78 , 85 , 44 , 90 , 143 , 90},
{90 , 35 , 111 , 90 , 76 , 115 , 78 , 88 , 44 , 90 , 145 , 90},
{90 , 34 , 111 , 90 , 75 , 112 , 80 , 88 , 48 , 90 , 146 , 90},
{90 , 34 , 115 , 90 , 75 , 110 , 81 , 91 , 52 , 90 , 147 , 90},
{90 , 33 , 119 , 90 , 75 , 107 , 81 , 93 , 52 , 90 , 147 , 90},
{90 , 31 , 119 , 90 , 75 , 104 , 83 , 93 , 56 , 90 , 148 , 90},
{90 , 32 , 123 , 90 , 72 , 104 , 86 , 96 , 60 , 90 , 148 , 90},
{90 , 32 , 127 , 90 , 69 , 104 , 86 , 98 , 60 , 90 , 146 , 90},
{90 , 33 , 127 , 90 , 67 , 104 , 88 , 98 , 64 , 90 , 145 , 90},
{90 , 34 , 131 , 90 , 64 , 104 , 91 , 99 , 68 , 90 , 145 , 90},
{90 , 36 , 135 , 90 , 62 , 103 , 91 , 101 , 68 , 90 , 144 , 90},
{90 , 40 , 135 , 90 , 66 , 103 , 94 , 101 , 72 , 90 , 143 , 90},
{90 , 44 , 139 , 90 , 71 , 103 , 97 , 102 , 76 , 90 , 143 , 90},
{90 , 49 , 143 , 90 , 75 , 103 , 97 , 103 , 76 , 90 , 142 , 90},
{90 , 53 , 143 , 90 , 79 , 103 , 101 , 103 , 81 , 90 , 140 , 90},
{90 , 57 , 146 , 90 , 84 , 103 , 105 , 104 , 85 , 90 , 140 , 90},
{90 , 57 , 150 , 90 , 84 , 102 , 94 , 104 , 75 , 90 , 139 , 90},
{90 , 56 , 150 , 90 , 83 , 102 , 85 , 104 , 66 , 90 , 138 , 90},
{90 , 54 , 153 , 90 , 83 , 102 , 76 , 104 , 56 , 90 , 138 , 90},
{90 , 54 , 156 , 90 , 83 , 101 , 69 , 104 , 46 , 90 , 137 , 90},
{90 , 53 , 156 , 90 , 82 , 101 , 62 , 104 , 36 , 90 , 135 , 90},
{90 , 52 , 159 , 90 , 81 , 101 , 63 , 104 , 28 , 90 , 135 , 90},
{90 , 52 , 162 , 90 , 81 , 100 , 65 , 103 , 23 , 90 , 134 , 90},
{90 , 50 , 162 , 90 , 81 , 100 , 68 , 103 , 18 , 90 , 133 , 90},
{90 , 49 , 164 , 90 , 80 , 100 , 73 , 102 , 15 , 90 , 133 , 90},
};
int Move_Circle_L_2T_L [][12] PROGMEM = {
{100 , 44 , 135 , 79 , 80 , 99 , 80 , 99 , 44 , 100 , 135 , 79},
{100 , 44 , 135 , 79 , 80 , 99 , 80 , 99 , 44 , 100 , 135 , 79},
{99 , 44 , 135 , 80 , 79 , 100 , 79 , 100 , 44 , 99 , 135 , 80},
{98 , 44 , 137 , 81 , 79 , 105 , 79 , 105 , 44 , 98 , 137 , 81},
{98 , 44 , 137 , 81 , 79 , 105 , 79 , 105 , 44 , 98 , 137 , 81},
{97 , 44 , 137 , 82 , 79 , 105 , 79 , 105 , 44 , 97 , 137 , 82},
{96 , 44 , 140 , 82 , 79 , 110 , 79 , 110 , 44 , 96 , 140 , 82},
{96 , 44 , 140 , 82 , 79 , 110 , 79 , 110 , 44 , 96 , 140 , 82},
{95 , 44 , 140 , 84 , 78 , 110 , 78 , 110 , 44 , 95 , 140 , 84},
{94 , 44 , 143 , 85 , 78 , 115 , 78 , 115 , 44 , 94 , 143 , 85},
{94 , 44 , 143 , 85 , 78 , 115 , 78 , 115 , 44 , 94 , 143 , 85},
{93 , 44 , 143 , 86 , 78 , 115 , 78 , 115 , 44 , 93 , 143 , 86},
{92 , 44 , 145 , 87 , 78 , 120 , 78 , 120 , 44 , 92 , 145 , 87},
{92 , 44 , 145 , 87 , 78 , 120 , 78 , 120 , 44 , 92 , 145 , 87},
{91 , 44 , 145 , 88 , 78 , 120 , 78 , 120 , 44 , 91 , 145 , 88},
{90 , 44 , 147 , 90 , 78 , 124 , 78 , 124 , 44 , 90 , 147 , 90},
{90 , 44 , 145 , 90 , 78 , 120 , 78 , 120 , 44 , 90 , 145 , 90},
{88 , 44 , 145 , 91 , 78 , 120 , 78 , 120 , 44 , 88 , 145 , 91},
{87 , 44 , 145 , 92 , 78 , 120 , 78 , 120 , 44 , 87 , 145 , 92},
{87 , 44 , 143 , 92 , 78 , 115 , 78 , 115 , 44 , 87 , 143 , 92},
{86 , 44 , 143 , 93 , 78 , 115 , 78 , 115 , 44 , 86 , 143 , 93},
{85 , 44 , 143 , 94 , 78 , 115 , 78 , 115 , 44 , 85 , 143 , 94},
{85 , 44 , 140 , 94 , 78 , 110 , 78 , 110 , 44 , 85 , 140 , 94},
{84 , 44 , 140 , 95 , 78 , 110 , 78 , 110 , 44 , 84 , 140 , 95},
{83 , 44 , 140 , 97 , 79 , 110 , 79 , 110 , 44 , 83 , 140 , 97},
{83 , 44 , 138 , 96 , 79 , 105 , 79 , 105 , 44 , 83 , 138 , 96},
{82 , 44 , 137 , 97 , 79 , 105 , 79 , 105 , 44 , 82 , 137 , 97},
{81 , 44 , 137 , 98 , 79 , 105 , 79 , 105 , 44 , 81 , 137 , 98},
{81 , 44 , 135 , 98 , 79 , 100 , 79 , 100 , 44 , 81 , 135 , 98},
{80 , 44 , 135 , 99 , 79 , 100 , 79 , 100 , 44 , 80 , 135 , 99},
{79 , 44 , 135 , 100 , 80 , 99 , 80 , 99 , 44 , 79 , 135 , 100},
{79 , 44 , 135 , 100 , 80 , 99 , 80 , 99 , 44 , 79 , 135 , 100},
{80 , 44 , 135 , 99 , 79 , 100 , 79 , 100 , 44 , 80 , 135 , 99},
{81 , 42 , 135 , 98 , 74 , 100 , 74 , 100 , 42 , 81 , 135 , 98},
{81 , 42 , 135 , 98 , 74 , 100 , 74 , 100 , 42 , 81 , 135 , 98},
{82 , 42 , 135 , 97 , 74 , 100 , 74 , 100 , 42 , 82 , 135 , 97},
{82 , 39 , 135 , 96 , 69 , 100 , 69 , 100 , 39 , 82 , 135 , 96},
{82 , 39 , 135 , 96 , 69 , 100 , 69 , 100 , 39 , 82 , 135 , 96},
{84 , 39 , 135 , 95 , 69 , 101 , 69 , 101 , 39 , 84 , 135 , 95},
{85 , 36 , 135 , 94 , 64 , 101 , 64 , 101 , 36 , 85 , 135 , 94},
{85 , 36 , 135 , 94 , 64 , 101 , 64 , 101 , 36 , 85 , 135 , 94},
{86 , 36 , 135 , 93 , 64 , 101 , 64 , 101 , 36 , 86 , 135 , 93},
{87 , 34 , 135 , 92 , 59 , 101 , 59 , 101 , 34 , 87 , 135 , 92},
{87 , 34 , 135 , 92 , 59 , 101 , 59 , 101 , 34 , 87 , 135 , 92},
{88 , 34 , 135 , 91 , 59 , 101 , 59 , 101 , 34 , 88 , 135 , 91},
{90 , 32 , 135 , 90 , 55 , 101 , 55 , 101 , 32 , 90 , 135 , 90},
{90 , 34 , 135 , 90 , 59 , 101 , 59 , 101 , 34 , 90 , 135 , 90},
{91 , 34 , 135 , 88 , 59 , 101 , 59 , 101 , 34 , 91 , 135 , 88},
{92 , 34 , 135 , 87 , 59 , 101 , 59 , 101 , 34 , 92 , 135 , 87},
{92 , 36 , 135 , 87 , 64 , 101 , 64 , 101 , 36 , 92 , 135 , 87},
{93 , 36 , 135 , 86 , 64 , 101 , 64 , 101 , 36 , 93 , 135 , 86},
{94 , 36 , 135 , 85 , 64 , 101 , 64 , 101 , 36 , 94 , 135 , 85},
{94 , 39 , 135 , 85 , 69 , 101 , 69 , 101 , 39 , 94 , 135 , 85},
{95 , 39 , 135 , 84 , 69 , 101 , 69 , 101 , 39 , 95 , 135 , 84},
{97 , 39 , 135 , 83 , 69 , 100 , 69 , 100 , 39 , 97 , 135 , 83},
{96 , 41 , 135 , 83 , 74 , 100 , 74 , 100 , 41 , 96 , 135 , 83},
{97 , 42 , 135 , 82 , 74 , 100 , 74 , 100 , 42 , 97 , 135 , 82},
{98 , 42 , 135 , 81 , 74 , 100 , 74 , 100 , 42 , 98 , 135 , 81},
{98 , 44 , 135 , 81 , 79 , 100 , 79 , 100 , 44 , 98 , 135 , 81},
{99 , 44 , 135 , 80 , 79 , 100 , 79 , 100 , 44 , 99 , 135 , 80},
};
int Move_Circle_R_2T_L [][12] PROGMEM = {
{79 , 44 , 135 , 100 , 80 , 99 , 80 , 99 , 44 , 79 , 135 , 100},
{79 , 44 , 135 , 100 , 80 , 99 , 80 , 99 , 44 , 79 , 135 , 100},
{80 , 44 , 135 , 99 , 79 , 100 , 79 , 100 , 44 , 80 , 135 , 99},
{81 , 44 , 137 , 98 , 79 , 105 , 79 , 105 , 44 , 81 , 137 , 98},
{81 , 44 , 137 , 98 , 79 , 105 , 79 , 105 , 44 , 81 , 137 , 98},
{82 , 44 , 137 , 97 , 79 , 105 , 79 , 105 , 44 , 82 , 137 , 97},
{83 , 44 , 140 , 97 , 79 , 110 , 79 , 110 , 44 , 83 , 140 , 97},
{83 , 44 , 140 , 97 , 79 , 110 , 79 , 110 , 44 , 83 , 140 , 97},
{84 , 44 , 140 , 95 , 78 , 110 , 78 , 110 , 44 , 84 , 140 , 95},
{85 , 44 , 143 , 94 , 78 , 115 , 78 , 115 , 44 , 85 , 143 , 94},
{85 , 44 , 143 , 94 , 78 , 115 , 78 , 115 , 44 , 85 , 143 , 94},
{86 , 44 , 143 , 93 , 78 , 115 , 78 , 115 , 44 , 86 , 143 , 93},
{87 , 44 , 145 , 92 , 78 , 120 , 78 , 120 , 44 , 87 , 145 , 92},
{87 , 44 , 145 , 92 , 78 , 120 , 78 , 120 , 44 , 87 , 145 , 92},
{88 , 44 , 145 , 91 , 78 , 120 , 78 , 120 , 44 , 88 , 145 , 91},
{90 , 44 , 147 , 90 , 78 , 124 , 78 , 124 , 44 , 90 , 147 , 90},
{90 , 44 , 145 , 90 , 78 , 120 , 78 , 120 , 44 , 90 , 145 , 90},
{91 , 44 , 145 , 88 , 78 , 120 , 78 , 120 , 44 , 91 , 145 , 88},
{92 , 44 , 145 , 87 , 78 , 120 , 78 , 120 , 44 , 92 , 145 , 87},
{92 , 44 , 143 , 87 , 78 , 115 , 78 , 115 , 44 , 92 , 143 , 87},
{93 , 44 , 143 , 86 , 78 , 115 , 78 , 115 , 44 , 93 , 143 , 86},
{94 , 44 , 143 , 85 , 78 , 115 , 78 , 115 , 44 , 94 , 143 , 85},
{94 , 44 , 140 , 85 , 78 , 110 , 78 , 110 , 44 , 94 , 140 , 85},
{95 , 44 , 140 , 84 , 78 , 110 , 78 , 110 , 44 , 95 , 140 , 84},
{96 , 44 , 140 , 82 , 79 , 110 , 79 , 110 , 44 , 96 , 140 , 82},
{96 , 44 , 138 , 83 , 79 , 105 , 79 , 105 , 44 , 96 , 138 , 83},
{97 , 44 , 137 , 82 , 79 , 105 , 79 , 105 , 44 , 97 , 137 , 82},
{98 , 44 , 137 , 81 , 79 , 105 , 79 , 105 , 44 , 98 , 137 , 81},
{98 , 44 , 135 , 81 , 79 , 100 , 79 , 100 , 44 , 98 , 135 , 81},
{99 , 44 , 135 , 80 , 79 , 100 , 79 , 100 , 44 , 99 , 135 , 80},
{100 , 44 , 135 , 79 , 80 , 99 , 80 , 99 , 44 , 100 , 135 , 79},
{100 , 44 , 135 , 79 , 80 , 99 , 80 , 99 , 44 , 100 , 135 , 79},
{99 , 44 , 135 , 80 , 79 , 100 , 79 , 100 , 44 , 99 , 135 , 80},
{98 , 42 , 135 , 81 , 74 , 100 , 74 , 100 , 42 , 98 , 135 , 81},
{98 , 42 , 135 , 81 , 74 , 100 , 74 , 100 , 42 , 98 , 135 , 81},
{97 , 42 , 135 , 82 , 74 , 100 , 74 , 100 , 42 , 97 , 135 , 82},
{97 , 39 , 135 , 83 , 69 , 100 , 69 , 100 , 39 , 97 , 135 , 83},
{97 , 39 , 135 , 83 , 69 , 100 , 69 , 100 , 39 , 97 , 135 , 83},
{95 , 39 , 135 , 84 , 69 , 101 , 69 , 101 , 39 , 95 , 135 , 84},
{94 , 36 , 135 , 85 , 64 , 101 , 64 , 101 , 36 , 94 , 135 , 85},
{94 , 36 , 135 , 85 , 64 , 101 , 64 , 101 , 36 , 94 , 135 , 85},
{93 , 36 , 135 , 86 , 64 , 101 , 64 , 101 , 36 , 93 , 135 , 86},
{92 , 34 , 135 , 87 , 59 , 101 , 59 , 101 , 34 , 92 , 135 , 87},
{92 , 34 , 135 , 87 , 59 , 101 , 59 , 101 , 34 , 92 , 135 , 87},
{91 , 34 , 135 , 88 , 59 , 101 , 59 , 101 , 34 , 91 , 135 , 88},
{90 , 32 , 135 , 90 , 55 , 101 , 55 , 101 , 32 , 90 , 135 , 90},
{90 , 34 , 135 , 90 , 59 , 101 , 59 , 101 , 34 , 90 , 135 , 90},
{88 , 34 , 135 , 91 , 59 , 101 , 59 , 101 , 34 , 88 , 135 , 91},
{87 , 34 , 135 , 92 , 59 , 101 , 59 , 101 , 34 , 87 , 135 , 92},
{87 , 36 , 135 , 92 , 64 , 101 , 64 , 101 , 36 , 87 , 135 , 92},
{86 , 36 , 135 , 93 , 64 , 101 , 64 , 101 , 36 , 86 , 135 , 93},
{85 , 36 , 135 , 94 , 64 , 101 , 64 , 101 , 36 , 85 , 135 , 94},
{85 , 39 , 135 , 94 , 69 , 101 , 69 , 101 , 39 , 85 , 135 , 94},
{84 , 39 , 135 , 95 , 69 , 101 , 69 , 101 , 39 , 84 , 135 , 95},
{82 , 39 , 135 , 96 , 69 , 100 , 69 , 100 , 39 , 82 , 135 , 96},
{83 , 41 , 135 , 96 , 74 , 100 , 74 , 100 , 41 , 83 , 135 , 96},
{82 , 42 , 135 , 97 , 74 , 100 , 74 , 100 , 42 , 82 , 135 , 97},
{81 , 42 , 135 , 98 , 74 , 100 , 74 , 100 , 42 , 81 , 135 , 98},
{81 , 44 , 135 , 98 , 79 , 100 , 79 , 100 , 44 , 81 , 135 , 98},
{80 , 44 , 135 , 99 , 79 , 100 , 79 , 100 , 44 , 80 , 135 , 99},
};

int Move_Stop_H [][12] PROGMEM = {
{90 , 53 , 126 , 90 , 96 , 83 , 96 , 83 , 53 , 90 , 126 , 90},
};
int Move_Stop_L [][12] PROGMEM = {
{90 , 44 , 135 , 90 , 78 , 101 , 78 , 101 , 44 , 90 , 135 , 90},
};

void setup() {
	Serial.begin(115200);      // initialize serial communication
  pinMode(BatteryPin, INPUT);

  All_Servo[0].attach(2, SERVOMIN, SERVOMAX);
  All_Servo[1].attach(5, SERVOMIN, SERVOMAX);
  All_Servo[2].attach(13, SERVOMIN, SERVOMAX);
  All_Servo[3].attach(10, SERVOMIN, SERVOMAX);

  All_Servo[4].attach(4, SERVOMIN, SERVOMAX);
  All_Servo[5].attach(7, SERVOMIN, SERVOMAX);
  All_Servo[6].attach(12, SERVOMIN, SERVOMAX);
  All_Servo[7].attach(11, SERVOMIN, SERVOMAX);

  All_Servo[8].attach(17, SERVOMIN, SERVOMAX); 
  All_Servo[9].attach(16, SERVOMIN, SERVOMAX);
  All_Servo[10].attach(3, SERVOMIN, SERVOMAX); 
  All_Servo[11].attach(15, SERVOMIN, SERVOMAX);
 
  // Battery Voltage Divider
  VoltageDivider = ((Vmax / (R2 / (R1 + R2))) / VStep);
  Run_PROGRAM_function(Move_Stop_H,1,10);

   // Initialize BLE subsystem & get BLE address
  LBLE.begin();
  while (!LBLE.ready()) {
    delay(100);
  }

  Serial.print("Device Address = [");
  LBLEAddress ble_address;
  String qter_cat_address;

  ble_address = LBLE.getDeviceAddress();
  qter_cat_address = ble_address.toString();
  Serial.print(qter_cat_address);
  Serial.println("]");

  String qter_cat_name;
  qter_cat_name = "CAT-" + qter_cat_address.substring(0, 2) + qter_cat_address.substring(3, 5);
//  qter_cat_name = "CAT-xxxx";  // Please change to CAT-NXX.  

  // Setup the Remote Control's Name
  LRemote.setName(qter_cat_name);

  LRemote.setGrid(3, 10);
  LRemote.setOrientation(RC_PORTRAIT);
    HL_btn.setText("H->L");
    HL_btn.setPos(1, 2);
    HL_btn.setSize(1, 2);
    HL_btn.setColor(RC_ORANGE);
  LRemote.addControl(HL_btn);
  fwd_btn.setText("FORWARD");
  fwd_btn.setPos(1, 0);
  fwd_btn.setSize(1, 2);
  fwd_btn.setColor(RC_BLUE);
  LRemote.addControl(fwd_btn);
  bwd_btn.setText("BACKWARD");
  bwd_btn.setPos(1, 4);
  bwd_btn.setSize(1, 2);
  bwd_btn.setColor(RC_BLUE);
  LRemote.addControl(bwd_btn);
  left_btn.setText("LEFT");
  left_btn.setPos(0, 2);
  left_btn.setSize(1, 2);
  left_btn.setColor(RC_BLUE);
  LRemote.addControl(left_btn);
  right_btn.setText("RIGHT");
  right_btn.setPos(2, 2);
  right_btn.setSize(1, 2);
  right_btn.setColor(RC_BLUE);
  LRemote.addControl(right_btn);
  demo1_btn.setText("Demo1");
  demo1_btn.setPos(0, 0);
  demo1_btn.setSize(1, 2);
  demo1_btn.setColor(RC_GREY);
  LRemote.addControl(demo1_btn);
  demo2_btn.setText("Demo2");
  demo2_btn.setPos(2, 0);
  demo2_btn.setSize(1, 2);
  demo2_btn.setColor(RC_GREY);
  LRemote.addControl(demo2_btn);

  demo3_btn.setText("Spin_L");
  demo3_btn.setPos(0, 4);
  demo3_btn.setSize(1, 2);
  demo3_btn.setColor(RC_GREY);
  LRemote.addControl(demo3_btn);
  demo4_btn.setText("Spin_R");
  demo4_btn.setPos(2, 4);
  demo4_btn.setSize(1, 2);
  demo4_btn.setColor(RC_GREY);
  LRemote.addControl(demo4_btn);
  act1_btn.setText("Act1");
  act1_btn.setPos(0, 7);
  act1_btn.setSize(1, 1);
  act1_btn.setColor(RC_GREEN);
  LRemote.addControl(act1_btn);
  act2_btn.setText("Act2");
  act2_btn.setPos(1, 7);
  act2_btn.setSize(1, 1);
  act2_btn.setColor(RC_GREEN);
  LRemote.addControl(act2_btn);
  act3_btn.setText("Act3");
  act3_btn.setPos(2, 7);
  act3_btn.setSize(1, 1);
  act3_btn.setColor(RC_GREEN);
  LRemote.addControl(act3_btn);
  act4_btn.setText("Act4");
  act4_btn.setPos(0, 8);
  act4_btn.setSize(1, 1);
  act4_btn.setColor(RC_GREEN);
  LRemote.addControl(act4_btn);
  act5_btn.setText("Act5");
  act5_btn.setPos(1, 8);
  act5_btn.setSize(1, 1);
  act5_btn.setColor(RC_GREEN);
  LRemote.addControl(act5_btn);
  act6_btn.setText("Act6");
  act6_btn.setPos(2, 8);
  act6_btn.setSize(1, 1);
  act6_btn.setColor(RC_GREEN);
  LRemote.addControl(act6_btn);
  act7_btn.setText("Act7");
  act7_btn.setPos(0, 9);
  act7_btn.setSize(1, 1);
  act7_btn.setColor(RC_GREEN);
  LRemote.addControl(act7_btn);
  act8_btn.setText("Act8");
  act8_btn.setPos(1, 9);
  act8_btn.setSize(1, 1);
  act8_btn.setColor(RC_GREEN);
  LRemote.addControl(act8_btn);
  act9_btn.setText("Act9");
  act9_btn.setPos(2, 9);
  act9_btn.setSize(1, 1);
  act9_btn.setColor(RC_GREEN);
  LRemote.addControl(act9_btn);

  // Start broadcasting our remote contoller
  LRemote.begin();
  Serial.println("LRemote begin ..."); 
}

void loop() {

  // Battery Voltage
  BatteryVol = analogRead(BatteryPin) * VoltageDivider * 0.1;
//  Serial.println(BatteryVol);

if (BatteryVol > BatteryLowVol) { 

  // BLE central device, e.g. an mobile app
  if (!LRemote.connected())
  {
  //   Serial.println("Waiting for connection ...");
    delay(10);
  }
  else
  {
     delay(10);
  }

  // Process the incoming BLE write request
  LRemote.process();

   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }

  if(home_btn.isValueChanged() && home_btn.getValue())
  {
  }
  if(fwd_btn.isValueChanged()&& fwd_btn.getValue())
  {
 //   set_default_pos();
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Forward_H,40,10);
    Run_PROGRAM_function(Move_Forward_H,40,10);
    Run_PROGRAM_function(Move_Forward_H,40,10);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Forward_L,40,10);
    Run_PROGRAM_function(Move_Forward_L,40,10);
    Run_PROGRAM_function(Move_Forward_L,40,10);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
  }
  if(bwd_btn.isValueChanged()&& bwd_btn.getValue())
  {
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Backward_H,40,10);
    Run_PROGRAM_function(Move_Backward_H,40,10);
    Run_PROGRAM_function(Move_Backward_H,40,10);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Backward_L,40,10);
    Run_PROGRAM_function(Move_Backward_L,40,10);
    Run_PROGRAM_function(Move_Backward_L,40,10);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
  } 
  if (left_btn.isValueChanged()&& left_btn.getValue())
  {
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Turn_L_H,40,10);
    Run_PROGRAM_function(Move_Turn_L_H,40,10);
    Run_PROGRAM_function(Move_Turn_L_H,40,10);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Turn_L_L,40,10);
    Run_PROGRAM_function(Move_Turn_L_L,40,10);
    Run_PROGRAM_function(Move_Turn_L_L,40,10);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
  }
  if (right_btn.isValueChanged()&& right_btn.getValue())
  {
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Turn_R_H,40,10);
    Run_PROGRAM_function(Move_Turn_R_H,40,10);
    Run_PROGRAM_function(Move_Turn_R_H,40,10);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Turn_R_L,40,10);
    Run_PROGRAM_function(Move_Turn_R_L,40,10);
    Run_PROGRAM_function(Move_Turn_R_L,40,10);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
     }
  if (demo1_btn.isValueChanged()&& demo1_btn.getValue())
  {
 
  }
  if (demo2_btn.isValueChanged()&& demo2_btn.getValue())
  {
  
  }  
  if (demo3_btn.isValueChanged()&& demo3_btn.getValue())
  {
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Circle_L_2T_H,40,5);
    Run_PROGRAM_function(Move_Circle_L_2T_H,40,5);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Circle_L_2T_L,40,5);
    Run_PROGRAM_function(Move_Circle_L_2T_L,40,5);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
  }  
  if (demo4_btn.isValueChanged()&& demo4_btn.getValue())
  {
   if ( HL_btn.getValue()== 0) {
    Run_PROGRAM_function(Move_Circle_R_2T_H,40,5);
    Run_PROGRAM_function(Move_Circle_R_2T_H,40,5);
    Run_PROGRAM_function(Move_Stop_H,1,10);
   }
   if ( HL_btn.getValue()== 1 ) {
    Run_PROGRAM_function(Move_Circle_R_2T_L,40,5);
    Run_PROGRAM_function(Move_Circle_R_2T_L,40,5);
    Run_PROGRAM_function(Move_Stop_L,1,10);
   }
  }  
  if (act1_btn.isValueChanged()&& act1_btn.getValue())
  {
  }  
  if (act2_btn.isValueChanged()&& act2_btn.getValue())
  {
  }  
  if (act3_btn.isValueChanged()&& act3_btn.getValue())
  {
  }  
  if (act4_btn.isValueChanged()&& act4_btn.getValue())
  {
  }  
  if (act5_btn.isValueChanged()&& act5_btn.getValue())
  {
  }  
  if (act6_btn.isValueChanged()&& act6_btn.getValue())
  {
  }  
  if (act7_btn.isValueChanged()&& act7_btn.getValue())
  {
  }  
  if (act8_btn.isValueChanged()&& act8_btn.getValue())
  {
  }  
  if (act9_btn.isValueChanged()&& act9_btn.getValue())
  {
  }  
 }    // Battery check loop 
}
